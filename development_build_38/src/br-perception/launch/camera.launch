<launch>

  <!-- Command Line Arguments -->
  <arg name="cam_name"  default="camera" />                   <!-- The name of the camera (corrsponding to the camera info) -->
  <arg name="frame_id"  default="/$(arg cam_name)_link" />    <!-- The TF frame ID. -->
  <arg name="sync_sink" default="true" />                    <!-- Synchronize the app sink. Setting this to false may resolve problems with sub-par frame rates. -->
  <arg name="respawn"   default="false" />                    <!-- Desired framerate. True framerate may not reach this if set too high. -->
  <arg name="simulation_mode" default="false"/>               <!-- Allow simulation to launch camera without the hardware part (just use image proc) -->
  <arg name="jpeg_quality" default="15"/>

  <node name="gscam_udp" type="gscam.py" pkg="br-perception"/>
  
  <group ns="camera">
    <!-- Make arguments available to parameter server -->
    

    <!-- Define the GSCAM pipeline -->
    <env name="GSCAM_CONFIG" value="gst-launch-1.0 udpsrc port=5000 ! application/x-rtp,encoding-name=JPEG,payload=26 ! rtpjpegdepay ! jpegdec ! videoconvert" />

    <!-- Start the GSCAM node -->
    <node unless="$(arg simulation_mode)" pkg="gscam" type="gscam" name="$(arg cam_name)" respawn="$(arg respawn)" respawn_delay="10">
      <param name="camera_name" value="$(arg cam_name)" />
      <param name="frame_id" value="$(arg frame_id)" />
      <param name="sync_sink" value="$(arg sync_sink)" />
      <param name="camera_info_url" value="package://br-perception/config/ost.yaml" />
    </node>

    <!-- Image rectification  -->
    <node pkg="image_proc" type="image_proc" name="image_proc" ns="camera" output="screen"/>

    <param name="camera/image_rect/compressed/jpeg_quality" value="10"/>
  </group>

</launch>
