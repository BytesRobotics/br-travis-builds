<?xml version="1.0"?>
<robot name="bytes" xmlns:xacro="http://www.ros.org/wiki/xacro">
    <!-- https://en.wikipedia.org/wiki/List_of_moments_of_inertia -->

    <xacro:macro name="chassis_inertial_params">
        <origin xyz="0.1477 0 0" rpy="0 0 0" />
        <mass value="${base_mass}" />
        <inertia ixx="${1.0/12*base_mass*(base_thickness*base_thickness + base_width*base_width)}" ixy="0" ixz="0"
                 iyy="${1.0/12*base_mass*(base_length*base_length + base_width*base_width)}"   iyz="0"
                 izz="${1.0/12*base_mass*(base_thickness*base_thickness + base_length*base_length)}" />
    </xacro:macro>

    <xacro:macro name="head_inertial_params">
        <origin xyz="0 0 0" rpy="0 0 0" />
        <mass value="${head_mass}" />
        <inertia ixx="${1.0/12*head_mass*(head_thickness*head_thickness + head_width*head_width)}" ixy="0" ixz="0"
                 iyy="${1.0/12*head_mass*(head_length*head_length + head_width*head_width)}"   iyz="0"
                 izz="${1.0/12*head_mass*(head_thickness*head_thickness + head_length*head_length)}" />
    </xacro:macro>

    <xacro:macro name="wheel_inertial_params">
        <origin xyz="0 0 -0.0225" rpy="0 0 0" />
        <mass value="${wheel_mass}" />
        <inertia ixx="${wheel_intertia}" ixy="0"          ixz="0"
                            iyy="${wheel_intertia}" iyz="0"
                                             izz="${wheel_intertia}" />
    </xacro:macro>

    <xacro:macro name="caster_inertial_params">
        <origin xyz="0 0 -0.0225" rpy="0 0 0" />
        <mass value="${caster_mass}" />
        <inertia ixx="${caster_intertia}" ixy="0"          ixz="0"
                            iyy="${caster_intertia}" iyz="0"
                                             izz="${caster_intertia}" />
    </xacro:macro>

    <xacro:macro name="chassis_geometry">
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
            <box size="${base_width} ${base_length} ${base_thickness}" />
        </geometry>
    </xacro:macro>

    <xacro:macro name="head_geometry">
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
            <box size="${head_width} ${head_length} ${head_thickness}" />
        </geometry>
    </xacro:macro>

    <xacro:macro name="wheel_geometry">
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
            <cylinder radius="${wheel_radius}" length="${wheel_thickness}" />
        </geometry>
    </xacro:macro>

    <xacro:macro name="caster_geometry">
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
            <sphere radius="${caster_radius}" />
        </geometry>
    </xacro:macro>

    <!-- transmission macros -->

    <xacro:macro name="wheel_transmission" params="name">
        <transmission name="${name}_transmission" type="SimpleTransmission">
            <type>transmission_interface/SimpleTransmission</type>
            <joint name="${name}_joint">
                <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
            </joint>
            <actuator name="${name}_motor">
                <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
                <mechanicalReduction>1</mechanicalReduction>
            </actuator>
        </transmission>
    </xacro:macro>

    <!-- Ultrasonic sensor xacro -->
    <xacro:macro name="dist_sensor" params="name x y z r p yaw">
        <link name="${name}_dist_sensor">
            <visual>
                <origin xyz="0 0 0" rpy="1.5708 0 1.5708" />
                <geometry>
                    <box size="0.045 0.020 0.01602" />
                </geometry>
                <material name="blue" />
            </visual>
        </link>
        <gazebo reference="${name}_dist_sensor">
            <sensor type="ray" name="sonar2">
              <pose>0 0 0 0 0 3.14159</pose>
              <update_rate>75</update_rate>
              <ray>
                <scan>
                  <horizontal>
                    <samples>5</samples>
                    <resolution>1.0</resolution>
                    <min_angle>-0.1</min_angle>
                    <max_angle>0.1</max_angle>
                  </horizontal>
                  <vertical>
                    <samples>5</samples>
                    <resolution>1</resolution>
                    <min_angle>-0.01</min_angle>
                    <max_angle>0.01</max_angle>
                  </vertical>
                </scan>
                <range>
                  <min>0.02</min>
                  <max>4.00</max>
                  <resolution>0.01</resolution>
                </range>
              </ray>
              <plugin filename="libgazebo_ros_range.so" name="gazebo_ros_range2">
                <gaussianNoise>0.005</gaussianNoise>
                <alwaysOn>true</alwaysOn>
                <updateRate>75</updateRate>
                <topicName>/distance/${name}</topicName>
                <frameName>${name}_dist_sensor</frameName>
                <fov>0.2</fov>
                <radiation>ultrasound</radiation>
              </plugin>
            </sensor>
            <material>Gazebo/Blue</material>
        </gazebo>
        <joint name="${name}_dist_sensor_joint" type="fixed">
            <origin xyz="${x} ${y} ${z}" rpy="${r} ${p} ${yaw}" />
            <parent link="chassis" />
            <child link="${name}_dist_sensor" />
        </joint>
    </xacro:macro>

    <xacro:macro name="camera_sensor" params="name x y z r p yaw parent">
        <link name="${name}_link">
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <visual>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <geometry>
                    <box size="0.05 0.05 0.05"/>
                </geometry>
                <material name="green"/>
            </visual>
        </link>

        <joint name="${name}_joint" type="fixed">
            <origin xyz="${x} ${y} ${z}" rpy="${r} ${p} ${yaw}"/> <!-- +z should point into the plane of the image  -->
            <parent link="${parent}"/>
            <child link="${name}_link"/>
        </joint>

        <!-- need an optical joint to make the camera spec work -->
        <joint name="${name}_optical_joint" type="fixed">
            <!-- these values have to be these values otherwise the gazebo camera
            image won't be aligned properly with the frame it is supposedly
            originating from -->
            <origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}"/>
            <parent link="${name}_link"/>
            <child link="${name}_link_optical"/>
        </joint>

        <link name="${name}_link_optical"/>

        <gazebo reference="${name}_link">
            <sensor type="camera" name="${name}">
                <update_rate>15.0</update_rate>
                <camera name="${name}">
                <horizontal_fov>1.3962634</horizontal_fov>
                <image>
                    <width>320</width>
                    <height>180</height>
                    <format>R8G8B8</format>
                </image>
                <clip>
                  <near>0.02</near>
                    <far>300</far>
                </clip>
                <noise>
                    <type>gaussian</type>
                    <!-- Noise is sampled independently per pixel on each frame.
                    That pixel's noise value is added to each of its color
                    channels, which at that point lie in the range [0,1]. -->
                    <mean>0.0</mean>
                    <stddev>0.007</stddev>
                </noise>
                </camera>
                <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
                    <alwaysOn>true</alwaysOn>
                    <updateRate>0.0</updateRate>
                    <cameraName>${name}</cameraName>
                    <imageTopicName>image_raw</imageTopicName>
                    <cameraInfoTopicName>camera_info</cameraInfoTopicName>
                    <frameName>${name}_link_optical</frameName>
                    <hackBaseline>0.2</hackBaseline>
                    <distortionK1>0.0</distortionK1>
                    <distortionK2>0.0</distortionK2>
                    <distortionK3>0.0</distortionK3>
                    <distortionT1>0.0</distortionT1>
                    <distortionT2>0.0</distortionT2>
                </plugin>
            </sensor>
            <material>Gazebo/Green</material>
        </gazebo>
    </xacro:macro>


    <!-- Add the remaining xacros -->
    <xacro:include filename="$(find br-description)/urdf/materials.xacro" />

</robot>
