<?xml version="1.0"?>
<robot name="bytes-v2-head" xmlns:xacro="http://www.ros.org/wiki/xacro">

    <!-- All measurements are in meters -->
    <xacro:property name="wheel_radius" value="0.11938" />
    <xacro:property name="wheel_mass" value="1"/>
    <xacro:property name="wheel_thickness" value="0.03302"/>
    <xacro:property name="wheel_intertia" value="${1.0/12*wheel_mass*(3*wheel_radius*wheel_radius*wheel_radius + wheel_thickness*wheel_thickness)}"/>

    <xacro:property name="base_width" value="0.44704"/>
    <xacro:property name="base_length" value="0.36068"/>
    <xacro:property name="base_thickness" value="0.101092"/>
    <xacro:property name="base_mass" value="20"/>

    <xacro:property name="head_width" value="0.177"/>
    <xacro:property name="head_length" value="0.24"/>
    <xacro:property name="head_thickness" value="0.165"/>
    <xacro:property name="head_mass" value="0.5"/>

    <!-- distance from the edge of the base to the edge of the wheel -->
    <xacro:property name="wheel_base_separation" value="0.01524"/>
    <!-- signed offset from the center of base -->
    <xacro:property name="wheel_offset" value="-0.1524"/>
    <!-- vertical offset of wheel from the center of the chassis -->
    <xacro:property name="vertical_wheel_offset" value="0"/>

    <!-- caster offset from edge of chassis (assumed to be centered along the length) -->
    <xacro:property name="caster_offset" value="0"/>
    <xacro:property name="caster_radius" value="0.0508"/>
    <xacro:property name="caster_mass" value="0.5"/>
    <xacro:property name="caster_intertia" value="${2.0/5*caster_mass*caster_radius*caster_radius}"/>

    <!-- gazebo plugins -->
    <gazebo>
        <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
            <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
            <legacyModeNS>false</legacyModeNS>
        </plugin>
    </gazebo>

    <xacro:include filename="$(find br-description)/urdf/macros.xacro" />
    <xacro:include filename="$(find br-description)/urdf/br-v1.gazebo" />

    <link name="base_link"/>

    <!-- Add chassis and inertial link -->
    <link name="chassis">
        <interial>
            <xacro:chassis_inertial_params/>
        </interial>
        <visual>
            <xacro:chassis_geometry/>
        </visual>
        <collision>
            <xacro:chassis_geometry/>
        </collision>
    </link>

    <joint name="base_link_joint" type="fixed">
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <parent link="base_link"/>
        <child link="chassis"/>
    </joint>

    <!-- Head servo joint and transmission -->
    <link name="head">
        <visual>
            <xacro:head_geometry/>
        </visual>
        <collision>
            <xacro:head_geometry/>
        </collision>
        <inertial>
            <xacro:head_inertial_params/>
        </inertial>
    </link>
    <joint name="head_joint" type="revolute">
        <origin xyz="-0.230 0.00 0.7" rpy="0 0 0"/>
        <parent link="chassis" />
        <child link="head" />
        <axis xyz="0 1 0" />
        <limit upper="0.4" lower="-0.4" effort="1" velocity="10"/>
    </joint>
    <transmission name="head_transmission" type="SimpleTransmission">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="head_joint">
            <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
        </joint>
        <actuator name="head_motor">
            <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>

    <!-- Add left and right wheels -->
    <link name="left_wheel">
        <inertial>
            <xacro:wheel_inertial_params />
        </inertial>
        <visual>
            <xacro:wheel_geometry />
            <material name="black" />
        </visual>
        <collision>
            <xacro:wheel_geometry />
        </collision>
    </link>

    <joint name="left_wheel_joint" type="continuous">
        <origin xyz="${wheel_offset} ${base_length/2 + wheel_base_separation + wheel_thickness/2} 0" rpy="1.5708 0 0" />
        <parent link="chassis" />
        <child link="left_wheel" />
        <axis xyz="0 0 -1" />
        <limit effort="10" velocity="100" />
    </joint>

    <xacro:wheel_transmission name="left_wheel" />

    <link name="right_wheel">
        <inertial>
            <xacro:wheel_inertial_params />
        </inertial>
        <visual>
            <xacro:wheel_geometry />
            <material name="black" />
        </visual>
        <collision>
            <xacro:wheel_geometry />
        </collision>
    </link>

    <joint name="right_wheel_joint" type="continuous">
        <origin xyz="${wheel_offset} ${-1*(base_length/2 + wheel_base_separation + wheel_thickness/2)} 0" rpy="1.5708 0 0" />
        <parent link="chassis" />
        <child link="right_wheel" />
        <axis xyz="0 0 -1" />
        <limit effort="10" velocity="100" />
    </joint>

    <xacro:wheel_transmission name="right_wheel" />

    <!-- Add front and back casters -->
    <link name="front_caster">
        <inertial>
            <xacro:caster_inertial_params />
        </inertial>
        <visual>
            <xacro:caster_geometry />
            <material name="grey" />
        </visual>
        <collision>
            <xacro:caster_geometry />
        </collision>
    </link>

    <joint name="front_caster_joint" type="fixed">
        <origin xyz="${base_width/2 - caster_radius - caster_offset} 0 ${vertical_wheel_offset + caster_radius - wheel_radius}" rpy="0 0 0" />
        <parent link="chassis" />
        <child link="front_caster" />
    </joint>

    <xacro:dist_sensor name="front" x="${base_width/2 + 0.01}" y="0" z="${base_thickness/2 - 0.02}" r="0" p="0" yaw="0"/>
    <xacro:dist_sensor name="left" x="${base_width/2 + 0.01}" y="0.1" z="${base_thickness/2 - 0.02}" r="0" p="0" yaw="0.785398"/>
    <xacro:dist_sensor name="right" x="${base_width/2 + 0.01}" y="-0.1" z="${base_thickness/2 - 0.02}" r="0" p="0" yaw="-0.785398"/>
    <xacro:dist_sensor name="rear" x="${-1*(base_width/2 + 0.01)}" y="0" z="${base_thickness/2 - 0.02}" r="0" p="0" yaw="3.14159"/>
    <xacro:dist_sensor name="bottom" x="${base_width/2 + 0.01}" y="0" z="0" r="0" p="1.5708" yaw="0"/>

    <!-- IMU -->
    <link name="imu_link">
        <visual>
            <geometry>
                <box size="0.001 0.002 0.0005" />
            </geometry>
            <material name="black" />
        </visual>
    </link>
    <joint name="chassis_imu_joint" type="fixed">
        <origin xyz="-0.230 0.00 0.45" rpy="0 0 0" />
        <parent link="chassis" />
        <child link="imu_link" />
    </joint>
    <gazebo reference="imu_link">
        <gravity>false</gravity>
        <sensor name="imu_sensor" type="imu">
            <always_on>true</always_on>
            <update_rate>30</update_rate>
            <visualize>true</visualize>
            <topic>__default_topic__</topic>
            <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
                <topicName>/imu/data</topicName>
                <bodyName>imu_link</bodyName>
                <updateRateHZ>60.0</updateRateHZ>
                <gaussianNoise>0.001</gaussianNoise>
                <xyzOffset>0 0 0</xyzOffset>
                <rpyOffset>0 0 0</rpyOffset>
                <frameName>imu_link</frameName>
            </plugin>
            <pose>0 0 0 0 0 0</pose>
        </sensor>
   </gazebo>

    <!-- Barometer -->
    <link name="barometer_link">
        <visual>
            <geometry>
                <box size="0.001 0.002 0.0005" />
            </geometry>
            <material name="black" />
        </visual>
    </link>
    <joint name="chassis_barometer_joint" type="fixed">
        <origin xyz="-0.230 0.00 0.48" rpy="0 0 0" />
        <parent link="chassis" />
        <child link="barometer_link" />
    </joint>
    <gazebo>
      <plugin name="p3d_base_controller" filename="libgazebo_ros_p3d.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>30.0</updateRate>
        <bodyName>base_link</bodyName>
        <topicName>ground_truth/state</topicName>
        <gaussianNoise>0.01</gaussianNoise>
        <frameName>world</frameName>
        <xyzOffsets>0 0 0</xyzOffsets>
        <rpyOffsets>0 0 0</rpyOffsets>
      </plugin>
    </gazebo>

    <!-- GPS -->
    <link name="gps_link">
        <visual>
            <geometry>
                <box size="0.01 0.02 0.005" />
            </geometry>
            <material name="black" />
        </visual>
    </link>
    <joint name="chassis_gps_joint" type="fixed">
        <origin xyz="-0.05 0.0 0.0825" rpy="0 0 0" />
        <parent link="head" />
        <child link="gps_link" />
    </joint>
    <gazebo>
        <plugin name="gps_controller" filename="libhector_gazebo_ros_gps.so">
            <updateRate>10.0</updateRate>
            <bodyName>base_link</bodyName>
            <frameId>gps_link</frameId>
            <topicName>/gps</topicName>
            <referenceLatitude>38.5853618</referenceLatitude>
            <referenceLongitude>-121.3594389</referenceLongitude>
            <velocityTopicName>/gps/ignore</velocityTopicName>
            <drift>5.0 5.0 5.0</drift>
            <gaussianNoise>0.1 0.1 0.1</gaussianNoise>
            <velocityDrift>0 0 0</velocityDrift>
            <velocityGaussianNoise>0.1 0.1 0.1</velocityGaussianNoise>
        </plugin>
        <material>Gazebo/Grey</material>
    </gazebo>

    <!-- Main cameras - left camera is used for main camera feed, right camera is used for stereo (camera are approximately 200mm appart) -->
    <link name="stereo_cam_link"/>
    <joint name="head_stereo_cam_joint" type="fixed">
        <origin xyz="${head_width/2} 0.0 0.0" rpy="0 0 0" />
        <parent link="head" />
        <child link="stereo_cam_link" />
    </joint>
    <xacro:camera_sensor name="stereo/left" x="0" y="0.1" z="0" r="0" p="0" yaw="0" parent="stereo_cam_link"/>
    <xacro:camera_sensor name="stereo/right" x="0" y="-0.1" z="0" r="0" p="0" yaw="0" parent="stereo_cam_link"/>


    <!-- Training cameras, these are used to collect extra data to augment the left camera (main camera) when collecting data -->
    <xacro:camera_sensor name="camera_l" x="${head_width/2}" y="${head_length/2+0.06}" z="0" r="0" p="0" yaw="0.78539816339" parent="head"/>
    <xacro:camera_sensor name="camera_r" x="${head_width/2}" y="${-1*(head_length/2+0.06)}" z="0" r="0" p="0" yaw="-0.78539816339" parent="head"/>


</robot>
